// Copyright (C) 2025 Intel Corporation
// SPDX-License-Identifier: Apache-2.0

export default {
  headerTitle: "RAG Pilot Pipeline Autotune Tool",
  common: {
    update: "Update",
    edit: "Edit",
    delete: "Delete",
    active: "Activate",
    deactivate: "Deactivate",
    cancel: "Cancel",
    confirm: "Confirm",
    save: "Save",
    next: "Next",
    reset: "Reset",
    error: "Error",
    exit: "Exit",
    back: "Back",
    prompt: "Prompt",
    download: "Download",
    collapse: "Collapse",
    expand: "Expand",
    original: "Original",
    final: "Final",
    uploadTip: "Click or drag file to this area to upload",
    exitTip: "Are you sure to exit? After exiting, the process will be reset.",
    ratingTip: "Please read each question patiently and rate the answer.",
    rated: "Rated",
    total: "Total",
    retry: "Retry",
    query: "Query",
    selected: "Selected",
    configuration: "Pipeline configuration",
    waitTip:
      "Please wait patiently and do not refresh the page during this period.",
  },
  home: {
    title: "Hi, I'm RAG Pilot.",
    des: "Please upload the file for debugging and analysis.",
    tip: "There is no available pipeline. Please create or activate it first.",
    create: " Create Ground Truth",
    edit: "Edit Ground Truth",
    uploadSucc: "Upload Successfully !",
    uploadErr: "Files upload failed!",
    fileFormat: "Supports CSV JSON format, with file size not exceeding 200M.",
    created: "You have successfully created ground truth.",
    validSizeErr: "Single file size not exceeding 200M.",
    form: {
      delContext: "Delete Context",
      delQuery: "Delete Query",
      addContext: "addete Context",
      addQuery: "Delete Query",
      label: {
        query: "Query",
        gt_context: "Contexts Ground Truth",
        fileName: "File name",
        context: "Context",
        gt_answer: "Answer Ground Truth",
      },
      placeholder: {
        query: "Please enter the query",
        fileName: "Please enter the file name",
        context: "Please enter the context",
        gt_answer: "Please enter the answer ground truth",
      },
      valid: {
        query: "Query cannot be empty",
        gt_context: "Contexts ground truth cannot be empty",
        fileName: "File name cannot be empty",
        context: "Context cannot be empty",
      },
      tip: {
        query: "Query description",
        fileName: "Reference documents",
        context: "Reference contexts ground truth",
        gt_answer: "Reference answer ground truth",
      },
    },
  },
  tuner: {
    rating: "Response rating",
    retriever: "Retrieve Context Tuning",
    processor: "Postprocess Context Tuning",
    generator: "Generation Tuning",
    results: "View Results",
  },
  retriever: {
    gt_context: "Contexts Ground Truth",
    search: "Search Retrieve Context",
    recall: "Recall rate",
    showHit: "Hit Context Details",
    hideHit: "Hide Details",
    retrieved: "Retrieved Context",
    chunk: "Retrieved Chunk",
    configuration: "Configuration",
  },
  postprocess: {
    pipelineRecall: "Pipeline recall rate",
    top_n: " Top n",
    search: "Search Postprocessed Context",
    retrieved: "Retrieved Context",
    postprocessed: "Postprocessed Context",
    chunk: "Postprocessed Chunk",
    tip: "Please select the most suitable Top n.",
    tip1: "The current top n is",
    tip2: ". Please confirm that you want to use this value to enter the generation tuning?",
  },
  prompt: {
    title: "Prompt",
    activated: "Activated Prompt",
  },
  results: {
    rating: "User rating",
    name: "Pipeline name",
    id: "ID",
    update: "Update to EC-RAG",
    detail: "Configuration details",
    download: "Download",
    retryTip:
      "Are you sure you want to retry? After confirmation, the process will be reset.",
  },
  pipeline: {
    detail: "Pipeline configuration",
    name: "Name",
    nodeParser: "Node Parser",
    nodeParserType: "Node parser type",
    chunkSize: "Chunk size",
    chunkOverlap: "Chunk overlap",
    windowSize: "Window Size",
    indexer: "Indexer",
    indexerType: "Indexer Type",
    embedding: "Embedding Model",
    retriever: "Retriever",
    retrieverType: "Retriever Type",
    topk: "Search top k",
    postProcessor: "PostProcessor",
    postProcessorType: "PostProcessor Type",
    top_n: "Top n",
    rerank: "Rerank Model",
    generator: "Generator",
    generatorType: "Generator Type",
    llm: "LLM Inference Type",
    language: "Large Language Model",
    weights: "Weights",
    local: "Local",
    vllm: "Vllm",
  },
  error: {
    notFoundTip: "Uh oh! It seems like you're lost",
    back: "Go Home",
  },
};
